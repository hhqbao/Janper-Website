<h2>Gloss Standard</h2>
@{
    var Imagepath = Server.MapPath("~/Images/DuraForm/Colours/GlossStandard");
    var Files = Directory.GetFiles(Imagepath);
    int counter = 1;
    foreach (var file in Files)
    {
        String swatch = Path.GetFileNameWithoutExtension(file);
        String[] swatcharray;
        swatcharray = swatch.Split('_');
        if (swatcharray.Length > 3)
        {
            if(swatcharray.Last() == "gloss")
            {
                swatch = UppercaseFirst(swatcharray[0]) + " " + UppercaseFirst(swatcharray[1]) + " " + UppercaseFirst(swatcharray[2]);
            }
            else
            {
                swatch = UppercaseFirst(swatcharray[0]) + " " + UppercaseFirst(swatcharray[1]);
            }

        }
        else if(swatcharray.Length > 2)
        {
            swatch = UppercaseFirst(swatcharray[0]) + " " + UppercaseFirst(swatcharray[1]);
        }
        else
        {
            swatch = UppercaseFirst(swatcharray[0]);
        }
        if (counter % 4 == 0)
        {
            <div class="content-wrapper quarter">
                <img src="~/Images/DuraForm/Colours/GlossStandard/@Path.GetFileName(file)">
                <h3>@swatch</h3>
            </div>
            <br class="clearfix" />
        }
        else if ((Files.Count() - counter) >= 4)
        {
            <div class="content-wrapper quarter no-border">
                <img src="~/Images/DuraForm/Colours/GlossStandard/@Path.GetFileName(file)">
                <h3>@swatch</h3>
            </div>
        }
        else
        {
            {
                <div class="content-wrapper quarter no-border">
                    <img src="~/Images/DuraForm/Colours/GlossStandard/@Path.GetFileName(file)">
                    <h3>@swatch</h3>
                </div>
            }
        }
        counter++;
    }
}
@functions{
    public string UppercaseFirst(string s)
    {
        // Check for empty string.
        if (string.IsNullOrEmpty(s))
        {
            return string.Empty;
        }
        // Return char and concat substring.
        return char.ToUpper(s[0]) + s.Substring(1);
    }
}